# 是否开启开发模式，当 dev_mode 为 true 时会有更详细的日志输出
dev_mode: false

# 后端 API 地址
api_endpoint:
  protocol: http
  hostname: keeper.test
  port: 80

# web server 的 http client 配置，一般不用修改
http_client:
  timeout: 30
  max_conn: 100
  dial_timeout: 30
  idle_conn_timeout: 90

# redis 服务地址，本地开发时可以只保留一个 addrs, 并修改为 `localhost:6379`
redis:
  addrs:
    - 192.168.200.40:6379
    - 192.168.200.43:6379
    - 192.168.200.44:6379
  timeout: 15
  db: 1

# 管理端 portal server 的服务启动配置
# 注意在本地开发时，server_port 需要和 nginx 的转发端口一致。部署时，一般会改为 80
portal_server:
  server_port: 9030
  log_level: debug
  log_dir: /path/to/logs/qxp-web
  templates_dir: /path/to/qxp-web/dist/templates
  # enable log to stdout
  enable_stdout: false

home_server:
  server_port: 9031
  log_level: debug
  log_dir: /path/to/logs/qxp-web
  templates_dir: /path/to/qxp-web/dist/templates
  # enable log to stdout
  enable_stdout: false

# 前端连接 socket 推送服务和跳转会用到的地址，请根据实际情况修改即可
client_config:
  # web socket 推送的域名
  websocket_hostname: keeper.test
  # 用户端的访问域名
  home_hostname: home.qxp.localhost
  # 管理端的访问域名
  portal_hostname: portal.qxp.localhost
  # 文档的域名
  docs_hostname: docs.qxp.com
  vendor:
    protocol: https
    hostname: example.com
    port: 443
